[
["index.html", "Bioconductor Annotation Resources Chapter 1 Prerequisites 1.1 Plan 1.2 Bioconductor", " Bioconductor Annotation Resources Martin Morgan 2020-09-30 Chapter 1 Prerequisites We’ll try to make as few biological assumptions as possible, but I know that Dr. Michael Love led a recent meet-up covering use of the DESeq2 package for bulk RNASeq differential expression analysis. 1.1 Plan We start by a quick Review of bulk RNA sequencing primarily to get an introduction to the airway package and sample data set. We’ll then talk about some simple types of genomic annotation: Identifier mapping, for instance from Ensembl gene identifiers to human gene symbols. Gene annotation, to discover the genomic coordinates (GRanges) of genes and transcripts. Gene sets corresponding to pre-defined categories, e.g., from the Gene Ontology (GO) or MSigDB. With this exposure, we’ll take a brief forward look at Cell annotation, relevant to new single-cell RNA sequence analysis. An excellent resource for scRNASeq is the book Orchestrating Single Cell Analysis in Bioconductor 1.2 Bioconductor Bioconductor is a collection of more than 1900 R packages for the statistical analysis and comprehension of high-throughput genomic data. Bioconductor packages are installed in a slightly different way. First, make sure that you have the BiocManager package installed if (!&quot;BiocManager&quot; %in% rownames(installed.packages())) install.packages(&quot;BiocManager&quot;, repos = &quot;https://cran.r-project.org&quot;) Then, install packages as needed. For instance, if you want to use the CRAN package dplyr, and the Bioconductor package airway, install these with pkgs &lt;- c(&quot;dplyr&quot;, &quot;airway&quot;) pkgs &lt;- pkgs[!pkgs %in% rownames(installed.packages())] BiocManager::install(pkgs) "],
["BulkRNASeq.html", "Chapter 2 Bulk RNA Sequencing 2.1 RNA-seq differential expression data in R / Bioconductor 2.2 A quick analysis 2.3 Saving and session information", " Chapter 2 Bulk RNA Sequencing 2.1 RNA-seq differential expression data in R / Bioconductor Bulk RNA sequencing starts by extracting tissue from samples, and then measuring ‘gene expression’ for many 1000’s of genes in each sample. The [airway][] package is an example of bulk RNA-seq data, processed (see the airway vignette, available from the package landing page) to a ‘SummarizedExperiment’ for use in Bioconductor. library(airway) data(airway) airway ## class: RangedSummarizedExperiment ## dim: 64102 8 ## metadata(1): &#39;&#39; ## assays(1): counts ## rownames(64102): ENSG00000000003 ENSG00000000005 ... LRG_98 LRG_99 ## rowData names(0): ## colnames(8): SRR1039508 SRR1039509 ... SRR1039520 SRR1039521 ## colData names(9): SampleName cell ... Sample BioSample The essence of an RNA-seq differential expression expression is a matrix of counts of expression of individual genes in each sample. This data is available using the accessor assay() dim(assay(airway)) ## [1] 64102 8 head(assay(airway)) ## SRR1039508 SRR1039509 SRR1039512 SRR1039513 SRR1039516 ## ENSG00000000003 679 448 873 408 1138 ## ENSG00000000005 0 0 0 0 0 ## ENSG00000000419 467 515 621 365 587 ## ENSG00000000457 260 211 263 164 245 ## ENSG00000000460 60 55 40 35 78 ## ENSG00000000938 0 0 2 0 1 ## SRR1039517 SRR1039520 SRR1039521 ## ENSG00000000003 1047 770 572 ## ENSG00000000005 0 0 0 ## ENSG00000000419 799 417 508 ## ENSG00000000457 331 233 229 ## ENSG00000000460 63 76 60 ## ENSG00000000938 0 0 0 Usually the samples are taken from an experimental design. The samples might be from an actual experiment, or from, e.g., different tissues, etc. Here’s the experimental design: colData(airway) ## DataFrame with 8 rows and 9 columns ## SampleName cell dex albut Run avgLength ## &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; &lt;integer&gt; ## SRR1039508 GSM1275862 N61311 untrt untrt SRR1039508 126 ## SRR1039509 GSM1275863 N61311 trt untrt SRR1039509 126 ## SRR1039512 GSM1275866 N052611 untrt untrt SRR1039512 126 ## SRR1039513 GSM1275867 N052611 trt untrt SRR1039513 87 ## SRR1039516 GSM1275870 N080611 untrt untrt SRR1039516 120 ## SRR1039517 GSM1275871 N080611 trt untrt SRR1039517 126 ## SRR1039520 GSM1275874 N061011 untrt untrt SRR1039520 101 ## SRR1039521 GSM1275875 N061011 trt untrt SRR1039521 98 ## Experiment Sample BioSample ## &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; ## SRR1039508 SRX384345 SRS508568 SAMN02422669 ## SRR1039509 SRX384346 SRS508567 SAMN02422675 ## SRR1039512 SRX384349 SRS508571 SAMN02422678 ## SRR1039513 SRX384350 SRS508572 SAMN02422670 ## SRR1039516 SRX384353 SRS508575 SAMN02422682 ## SRR1039517 SRX384354 SRS508576 SAMN02422673 ## SRR1039520 SRX384357 SRS508579 SAMN02422683 ## SRR1039521 SRX384358 SRS508580 SAMN02422677 There are 8 samples (‘Sample’) from four cell lines (‘cell’), exposed to two treatments of dexamethasone (‘dex’) When I explore data I sometimes like to use the ‘tidy’ approach library(dplyr) design &lt;- colData(airway) %&gt;% as_tibble() %&gt;% select(Sample, cell, dex) design ## # A tibble: 8 x 3 ## Sample cell dex ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; ## 1 SRS508568 N61311 untrt ## 2 SRS508567 N61311 trt ## 3 SRS508571 N052611 untrt ## 4 SRS508572 N052611 trt ## 5 SRS508575 N080611 untrt ## 6 SRS508576 N080611 trt ## 7 SRS508579 N061011 untrt ## 8 SRS508580 N061011 trt design %&gt;% dplyr::count(dex) ## # A tibble: 2 x 2 ## dex n ## &lt;fct&gt; &lt;int&gt; ## 1 trt 4 ## 2 untrt 4 design %&gt;% dplyr::count(cell) ## # A tibble: 4 x 2 ## cell n ## &lt;fct&gt; &lt;int&gt; ## 1 N052611 2 ## 2 N061011 2 ## 3 N080611 2 ## 4 N61311 2 Today we’ll focus on the rows (genes) of the RNASeq experiment. In the airway data, the ‘rowData’ are very simple and consist just of Ensembl gene identifiers rowData(airway) %&gt;% as_tibble(rownames = &quot;Gene&quot;) ## # A tibble: 64,102 x 1 ## Gene ## &lt;chr&gt; ## 1 ENSG00000000003 ## 2 ENSG00000000005 ## 3 ENSG00000000419 ## 4 ENSG00000000457 ## 5 ENSG00000000460 ## 6 ENSG00000000938 ## 7 ENSG00000000971 ## 8 ENSG00000001036 ## 9 ENSG00000001084 ## 10 ENSG00000001167 ## # … with 64,092 more rows 2.2 A quick analysis It’s beyond the scope of today’s lecture, but let’s do a quick analysis of differenetial expression in the airway dataset. Start by loading the [DESeq2][] package library(DESeq2) Prepare the data by ‘re-leveling’ the ‘dex’ treatment variable, and describing the experirmental design colData(airway)$dex &lt;- relevel(colData(airway)$dex, &quot;untrt&quot;) dds &lt;- DESeqDataSet(airway, ~ cell + dex) Perform the differential expression analysis… dds &lt;- DESeq(dds) ## estimating size factors ## estimating dispersions ## gene-wise dispersion estimates ## mean-dispersion relationship ## final dispersion estimates ## fitting model and testing …and summarize results in terms average expression (‘baseMean’), adjusted P-value (‘padj’), etc. results(dds) ## log2 fold change (MLE): dex trt vs untrt ## Wald test p-value: dex trt vs untrt ## DataFrame with 64102 rows and 6 columns ## baseMean log2FoldChange lfcSE stat pvalue ## &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; ## ENSG00000000003 708.6022 -0.3812539 0.100654 -3.787751 0.000152017 ## ENSG00000000005 0.0000 NA NA NA NA ## ENSG00000000419 520.2979 0.2068127 0.112219 1.842944 0.065337210 ## ENSG00000000457 237.1630 0.0379206 0.143445 0.264357 0.791504963 ## ENSG00000000460 57.9326 -0.0881677 0.287142 -0.307053 0.758803336 ## ... ... ... ... ... ... ## LRG_94 0 NA NA NA NA ## LRG_96 0 NA NA NA NA ## LRG_97 0 NA NA NA NA ## LRG_98 0 NA NA NA NA ## LRG_99 0 NA NA NA NA ## padj ## &lt;numeric&gt; ## ENSG00000000003 0.00128364 ## ENSG00000000005 NA ## ENSG00000000419 0.19654584 ## ENSG00000000457 0.91145800 ## ENSG00000000460 0.89503445 ## ... ... ## LRG_94 NA ## LRG_96 NA ## LRG_97 NA ## LRG_98 NA ## LRG_99 NA For convenience, add the results to the rowData() of the airway dataset rowData(airway) &lt;- results(dds) 2.3 Saving and session information Save the updated object for use in the next chapter. saveRDS(airway, &quot;airway_with_results.Rda&quot;) Use the sessionInfo() command to record the precise software versions we used. sessionInfo() ## R version 4.0.2 Patched (2020-09-15 r79213) ## Platform: x86_64-apple-darwin17.7.0 (64-bit) ## Running under: macOS High Sierra 10.13.6 ## ## Matrix products: default ## BLAS: /Users/ma38727/bin/R-4-0-branch/lib/libRblas.dylib ## LAPACK: /Users/ma38727/bin/R-4-0-branch/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats4 parallel stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] DESeq2_1.28.1 airway_1.8.0 ## [3] SummarizedExperiment_1.18.2 DelayedArray_0.14.1 ## [5] matrixStats_0.56.0 org.Hs.eg.db_3.11.4 ## [7] GO.db_3.11.4 dplyr_1.0.2 ## [9] EnsDb.Hsapiens.v75_2.99.0 ensembldb_2.12.1 ## [11] AnnotationFilter_1.12.0 GenomicFeatures_1.40.1 ## [13] AnnotationDbi_1.50.3 Biobase_2.48.0 ## [15] GenomicRanges_1.40.0 GenomeInfoDb_1.24.2 ## [17] IRanges_2.22.2 S4Vectors_0.26.1 ## [19] BiocGenerics_0.34.0 ## ## loaded via a namespace (and not attached): ## [1] ProtGenerics_1.20.0 bitops_1.0-6 bit64_4.0.5 ## [4] RColorBrewer_1.1-2 progress_1.2.2 httr_1.4.2 ## [7] tools_4.0.2 utf8_1.1.4 R6_2.4.1 ## [10] DBI_1.1.0 lazyeval_0.2.2 colorspace_1.4-1 ## [13] tidyselect_1.1.0 prettyunits_1.1.1 bit_4.0.4 ## [16] curl_4.3 compiler_4.0.2 cli_2.0.2 ## [19] rtracklayer_1.48.0 bookdown_0.20 scales_1.1.1 ## [22] genefilter_1.70.0 askpass_1.1 rappdirs_0.3.1 ## [25] stringr_1.4.0 digest_0.6.25 Rsamtools_2.4.0 ## [28] rmarkdown_2.3 XVector_0.28.0 pkgconfig_2.0.3 ## [31] htmltools_0.5.0 dbplyr_1.4.4 rlang_0.4.7 ## [34] rstudioapi_0.11 RSQLite_2.2.0 generics_0.0.2 ## [37] BiocParallel_1.22.0 RCurl_1.98-1.2 magrittr_1.5 ## [40] GenomeInfoDbData_1.2.3 Matrix_1.2-18 Rcpp_1.0.5 ## [43] munsell_0.5.0 fansi_0.4.1 lifecycle_0.2.0 ## [46] stringi_1.4.6 yaml_2.2.1 zlibbioc_1.34.0 ## [49] BiocFileCache_1.12.1 grid_4.0.2 blob_1.2.1 ## [52] crayon_1.3.4 lattice_0.20-41 Biostrings_2.56.0 ## [55] splines_4.0.2 annotate_1.66.0 hms_0.5.3 ## [58] locfit_1.5-9.4 knitr_1.29 pillar_1.4.6 ## [61] geneplotter_1.66.0 codetools_0.2-16 biomaRt_2.44.1 ## [64] XML_3.99-0.5 glue_1.4.2 evaluate_0.14 ## [67] vctrs_0.3.4 gtable_0.3.0 openssl_1.4.2 ## [70] purrr_0.3.4 assertthat_0.2.1 ggplot2_3.3.2 ## [73] xfun_0.16 xtable_1.8-4 survival_3.2-3 ## [76] tibble_3.0.3 GenomicAlignments_1.24.0 memoise_1.1.0 ## [79] ellipsis_0.3.1 "],
["gene-symbol-mapping.html", "Chapter 3 Gene symbol mapping 3.1 What do we want to do? 3.2 Finding annotation resources 3.3 Mapping between identiifiers 3.4 Saving and session information", " Chapter 3 Gene symbol mapping 3.1 What do we want to do? Start by loading the updated ‘airway’ object from the previous chapter airway &lt;- readRDS(&quot;airway_with_results.Rda&quot;) Here is the row data rowData(airway) ## log2 fold change (MLE): dex trt vs untrt ## Wald test p-value: dex trt vs untrt ## DataFrame with 64102 rows and 6 columns ## baseMean log2FoldChange lfcSE stat pvalue ## &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; ## ENSG00000000003 708.6022 -0.3812539 0.100654 -3.787751 0.000152017 ## ENSG00000000005 0.0000 NA NA NA NA ## ENSG00000000419 520.2979 0.2068127 0.112219 1.842944 0.065337210 ## ENSG00000000457 237.1630 0.0379206 0.143445 0.264357 0.791504963 ## ENSG00000000460 57.9326 -0.0881677 0.287142 -0.307053 0.758803336 ## ... ... ... ... ... ... ## LRG_94 0 NA NA NA NA ## LRG_96 0 NA NA NA NA ## LRG_97 0 NA NA NA NA ## LRG_98 0 NA NA NA NA ## LRG_99 0 NA NA NA NA ## padj ## &lt;numeric&gt; ## ENSG00000000003 0.00128364 ## ENSG00000000005 NA ## ENSG00000000419 0.19654584 ## ENSG00000000457 0.91145800 ## ENSG00000000460 0.89503445 ## ... ... ## LRG_94 NA ## LRG_96 NA ## LRG_97 NA ## LRG_98 NA ## LRG_99 NA It’s easy to find the ‘most differentially expressed’ (smallest adjusted P-value?) genes, e.g., toptbl &lt;- rowData(airway) %&gt;% as_tibble(rownames = &quot;Gene&quot;) %&gt;% arrange(padj) toptbl ## # A tibble: 64,102 x 7 ## Gene baseMean log2FoldChange lfcSE stat pvalue padj ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ENSG00000152583 997. 4.57 0.184 24.9 2.22e-136 4.01e-132 ## 2 ENSG00000165995 495. 3.29 0.133 24.7 7.84e-135 7.07e-131 ## 3 ENSG00000120129 3409. 2.95 0.121 24.3 3.67e-130 2.20e-126 ## 4 ENSG00000101347 12703. 3.77 0.155 24.2 9.58e-130 4.32e-126 ## 5 ENSG00000189221 2342. 3.35 0.142 23.7 1.10e-123 3.96e-120 ## 6 ENSG00000211445 12286. 3.73 0.166 22.5 4.62e-112 1.39e-108 ## 7 ENSG00000157214 3009. 1.98 0.0900 22.0 5.77e-107 1.49e-103 ## 8 ENSG00000162614 5393. 2.04 0.0942 21.6 1.32e-103 2.98e-100 ## 9 ENSG00000125148 3656. 2.21 0.106 20.9 2.90e- 97 5.81e- 94 ## 10 ENSG00000154734 30315. 2.35 0.116 20.3 3.26e- 91 5.88e- 88 ## # … with 64,092 more rows But what exactly does “ENSG00000152583” do? Can we map this identifier to a more familiar representation, perhaps find out some basic information about what it does? 3.2 Finding annotation resources From the airway [vignette][airway-vignette], the experiment used Ensembl reference annotations from Ensembl release 75. This is available as a Bioconductor package BiocManager::available(&quot;EnsDb&quot;) ## [1] &quot;AHEnsDbs&quot; &quot;EnsDb.Hsapiens.v75&quot; &quot;EnsDb.Hsapiens.v79&quot; ## [4] &quot;EnsDb.Hsapiens.v86&quot; &quot;EnsDb.Mmusculus.v75&quot; &quot;EnsDb.Mmusculus.v79&quot; ## [7] &quot;EnsDb.Rnorvegicus.v75&quot; &quot;EnsDb.Rnorvegicus.v79&quot; so we load that package (it may be necessary to install the package using [BiocManager][], as outlined previously) library(EnsDb.Hsapiens.v75) The central object in this package is the same as the package name EnsDb.Hsapiens.v75 ## EnsDb for Ensembl: ## |Backend: SQLite ## |Db type: EnsDb ## |Type of Gene ID: Ensembl Gene ID ## |Supporting package: ensembldb ## |Db created by: ensembldb package from Bioconductor ## |script_version: 0.3.0 ## |Creation time: Thu May 18 09:15:45 2017 ## |ensembl_version: 75 ## |ensembl_host: localhost ## |Organism: homo_sapiens ## |taxonomy_id: 9606 ## |genome_build: GRCh37 ## |DBSCHEMAVERSION: 2.0 ## | No. of genes: 64102. ## | No. of transcripts: 215647. ## |Protein data available. This object represents a connection to a database of gene symbol mapping. Many other genomes (and other annotation resources) are available in the AnnotationHub library(AnnotationHub) library(ensembldb) hub &lt;- AnnotationHub() hub ## AnnotationHub with 50520 records ## # snapshotDate(): 2020-04-27 ## # $dataprovider: BroadInstitute, Ensembl, UCSC, ftp://ftp.ncbi.nlm.nih.gov/g... ## # $species: Homo sapiens, Mus musculus, Drosophila melanogaster, Bos taurus,... ## # $rdataclass: GRanges, BigWigFile, TwoBitFile, Rle, EnsDb, OrgDb, ChainFile... ## # additional mcols(): taxonomyid, genome, description, ## # coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, ## # rdatapath, sourceurl, sourcetype ## # retrieve records with, e.g., &#39;object[[&quot;AH5012&quot;]]&#39; ## ## title ## AH5012 | Chromosome Band ## AH5013 | STS Markers ## AH5014 | FISH Clones ## AH5015 | Recomb Rate ## AH5016 | ENCODE Pilot ## ... ... ## AH83357 | Ensembl 101 EnsDb for Xiphophorus couchianus ## AH83358 | Ensembl 101 EnsDb for Xiphophorus maculatus ## AH83359 | Ensembl 101 EnsDb for Xenopus tropicalis ## AH83360 | Ensembl 101 EnsDb for Zonotrichia albicollis ## AH83361 | Ensembl 101 EnsDb for Zalophus californianus query(hub, c(&quot;EnsDb&quot;, &quot;Homo sapiens&quot;)) ## AnnotationHub with 16 records ## # snapshotDate(): 2020-04-27 ## # $dataprovider: Ensembl ## # $species: Homo sapiens ## # $rdataclass: EnsDb ## # additional mcols(): taxonomyid, genome, description, ## # coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, ## # rdatapath, sourceurl, sourcetype ## # retrieve records with, e.g., &#39;object[[&quot;AH53211&quot;]]&#39; ## ## title ## AH53211 | Ensembl 87 EnsDb for Homo Sapiens ## AH53715 | Ensembl 88 EnsDb for Homo Sapiens ## AH56681 | Ensembl 89 EnsDb for Homo Sapiens ## AH57757 | Ensembl 90 EnsDb for Homo Sapiens ## AH60773 | Ensembl 91 EnsDb for Homo Sapiens ## ... ... ## AH73986 | Ensembl 79 EnsDb for Homo sapiens ## AH75011 | Ensembl 98 EnsDb for Homo sapiens ## AH78783 | Ensembl 99 EnsDb for Homo sapiens ## AH79689 | Ensembl 100 EnsDb for Homo sapiens ## AH83216 | Ensembl 101 EnsDb for Homo sapiens ens101 &lt;- hub[[&quot;AH83216&quot;]] ens101 ## EnsDb for Ensembl: ## |Backend: SQLite ## |Db type: EnsDb ## |Type of Gene ID: Ensembl Gene ID ## |Supporting package: ensembldb ## |Db created by: ensembldb package from Bioconductor ## |script_version: 0.3.5 ## |Creation time: Fri Aug 21 21:07:29 2020 ## |ensembl_version: 101 ## |ensembl_host: localhost ## |Organism: Homo sapiens ## |taxonomy_id: 9606 ## |genome_build: GRCh38 ## |DBSCHEMAVERSION: 2.1 ## | No. of genes: 67990. ## | No. of transcripts: 252335. ## |Protein data available. 3.3 Mapping between identiifiers keytypes(EnsDb.Hsapiens.v75) ## [1] &quot;ENTREZID&quot; &quot;EXONID&quot; &quot;GENEBIOTYPE&quot; ## [4] &quot;GENEID&quot; &quot;GENENAME&quot; &quot;PROTDOMID&quot; ## [7] &quot;PROTEINDOMAINID&quot; &quot;PROTEINDOMAINSOURCE&quot; &quot;PROTEINID&quot; ## [10] &quot;SEQNAME&quot; &quot;SEQSTRAND&quot; &quot;SYMBOL&quot; ## [13] &quot;TXBIOTYPE&quot; &quot;TXID&quot; &quot;TXNAME&quot; ## [16] &quot;UNIPROTID&quot; head(keys(EnsDb.Hsapiens.v75, &quot;GENEID&quot;)) ## [1] &quot;ENSG00000000003&quot; &quot;ENSG00000000005&quot; &quot;ENSG00000000419&quot; &quot;ENSG00000000457&quot; ## [5] &quot;ENSG00000000460&quot; &quot;ENSG00000000938&quot; columns(EnsDb.Hsapiens.v75) ## [1] &quot;ENTREZID&quot; &quot;EXONID&quot; &quot;EXONIDX&quot; ## [4] &quot;EXONSEQEND&quot; &quot;EXONSEQSTART&quot; &quot;GENEBIOTYPE&quot; ## [7] &quot;GENEID&quot; &quot;GENENAME&quot; &quot;GENESEQEND&quot; ## [10] &quot;GENESEQSTART&quot; &quot;INTERPROACCESSION&quot; &quot;ISCIRCULAR&quot; ## [13] &quot;PROTDOMEND&quot; &quot;PROTDOMSTART&quot; &quot;PROTEINDOMAINID&quot; ## [16] &quot;PROTEINDOMAINSOURCE&quot; &quot;PROTEINID&quot; &quot;PROTEINSEQUENCE&quot; ## [19] &quot;SEQCOORDSYSTEM&quot; &quot;SEQLENGTH&quot; &quot;SEQNAME&quot; ## [22] &quot;SEQSTRAND&quot; &quot;SYMBOL&quot; &quot;TXBIOTYPE&quot; ## [25] &quot;TXCDSSEQEND&quot; &quot;TXCDSSEQSTART&quot; &quot;TXID&quot; ## [28] &quot;TXNAME&quot; &quot;TXSEQEND&quot; &quot;TXSEQSTART&quot; ## [31] &quot;UNIPROTDB&quot; &quot;UNIPROTID&quot; &quot;UNIPROTMAPPINGTYPE&quot; mapIds(EnsDb.Hsapiens.v75, toptbl$Gene, &quot;SYMBOL&quot;, &quot;GENEID&quot;) %&gt;% head() ## ENSG00000152583 ENSG00000165995 ENSG00000120129 ENSG00000101347 ENSG00000189221 ## &quot;SPARCL1&quot; &quot;CACNB2&quot; &quot;DUSP1&quot; &quot;SAMHD1&quot; &quot;MAOA&quot; ## ENSG00000211445 ## &quot;GPX3&quot; toptbl %&gt;% mutate( SYMBOL = mapIds(x = EnsDb.Hsapiens.v75, Gene, &quot;SYMBOL&quot;, &quot;GENEID&quot;) ) ## # A tibble: 64,102 x 8 ## Gene baseMean log2FoldChange lfcSE stat pvalue padj SYMBOL ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 ENSG00000152… 997. 4.57 0.184 24.9 2.22e-136 4.01e-132 SPARC… ## 2 ENSG00000165… 495. 3.29 0.133 24.7 7.84e-135 7.07e-131 CACNB2 ## 3 ENSG00000120… 3409. 2.95 0.121 24.3 3.67e-130 2.20e-126 DUSP1 ## 4 ENSG00000101… 12703. 3.77 0.155 24.2 9.58e-130 4.32e-126 SAMHD1 ## 5 ENSG00000189… 2342. 3.35 0.142 23.7 1.10e-123 3.96e-120 MAOA ## 6 ENSG00000211… 12286. 3.73 0.166 22.5 4.62e-112 1.39e-108 GPX3 ## 7 ENSG00000157… 3009. 1.98 0.0900 22.0 5.77e-107 1.49e-103 STEAP2 ## 8 ENSG00000162… 5393. 2.04 0.0942 21.6 1.32e-103 2.98e-100 NEXN ## 9 ENSG00000125… 3656. 2.21 0.106 20.9 2.90e- 97 5.81e- 94 MT2A ## 10 ENSG00000154… 30315. 2.35 0.116 20.3 3.26e- 91 5.88e- 88 ADAMT… ## # … with 64,092 more rows mapIds(EnsDb.Hsapiens.v75, toptbl$Gene, &quot;GENENAME&quot;, &quot;GENEID&quot;) %&gt;% head() ## ENSG00000152583 ENSG00000165995 ENSG00000120129 ENSG00000101347 ENSG00000189221 ## &quot;SPARCL1&quot; &quot;CACNB2&quot; &quot;DUSP1&quot; &quot;SAMHD1&quot; &quot;MAOA&quot; ## ENSG00000211445 ## &quot;GPX3&quot; toptbl &lt;- toptbl %&gt;% mutate( SYMBOL = mapIds(x = EnsDb.Hsapiens.v75, Gene, &quot;SYMBOL&quot;, &quot;GENEID&quot;), ENTREZID = mapIds(x = EnsDb.Hsapiens.v75, Gene, &quot;ENTREZID&quot;, &quot;GENEID&quot;) ) %&gt;% dplyr::select( &quot;Gene&quot;, &quot;SYMBOL&quot;, &quot;ENTREZID&quot;, everything() ) ## Warning: Problem with `mutate()` input `ENTREZID`. ## ℹ Unable to map 35866 of 64102 requested IDs. ## ℹ Input `ENTREZID` is `mapIds(x = EnsDb.Hsapiens.v75, Gene, &quot;ENTREZID&quot;, &quot;GENEID&quot;)`. ## Warning: Unable to map 35866 of 64102 requested IDs. toptbl ## # A tibble: 64,102 x 9 ## Gene SYMBOL ENTREZID baseMean log2FoldChange lfcSE stat pvalue ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ENSG… SPARC… 8404 997. 4.57 0.184 24.9 2.22e-136 ## 2 ENSG… CACNB2 783 495. 3.29 0.133 24.7 7.84e-135 ## 3 ENSG… DUSP1 1843 3409. 2.95 0.121 24.3 3.67e-130 ## 4 ENSG… SAMHD1 25939 12703. 3.77 0.155 24.2 9.58e-130 ## 5 ENSG… MAOA 4128 2342. 3.35 0.142 23.7 1.10e-123 ## 6 ENSG… GPX3 2878 12286. 3.73 0.166 22.5 4.62e-112 ## 7 ENSG… STEAP2 261729 3009. 1.98 0.0900 22.0 5.77e-107 ## 8 ENSG… NEXN 91624 5393. 2.04 0.0942 21.6 1.32e-103 ## 9 ENSG… MT2A 4502 3656. 2.21 0.106 20.9 2.90e- 97 ## 10 ENSG… ADAMT… 9510 30315. 2.35 0.116 20.3 3.26e- 91 ## # … with 64,092 more rows, and 1 more variable: padj &lt;dbl&gt; 3.4 Saving and session information Let’s save the updated top table for future use saveRDS(toptbl, &quot;toptbl.Rda&quot;) and record our session information for reproducibility sessionInfo() ## R version 4.0.2 Patched (2020-09-15 r79213) ## Platform: x86_64-apple-darwin17.7.0 (64-bit) ## Running under: macOS High Sierra 10.13.6 ## ## Matrix products: default ## BLAS: /Users/ma38727/bin/R-4-0-branch/lib/libRblas.dylib ## LAPACK: /Users/ma38727/bin/R-4-0-branch/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats4 parallel stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] AnnotationHub_2.20.2 BiocFileCache_1.12.1 ## [3] dbplyr_1.4.4 DESeq2_1.28.1 ## [5] airway_1.8.0 SummarizedExperiment_1.18.2 ## [7] DelayedArray_0.14.1 matrixStats_0.56.0 ## [9] org.Hs.eg.db_3.11.4 GO.db_3.11.4 ## [11] dplyr_1.0.2 EnsDb.Hsapiens.v75_2.99.0 ## [13] ensembldb_2.12.1 AnnotationFilter_1.12.0 ## [15] GenomicFeatures_1.40.1 AnnotationDbi_1.50.3 ## [17] Biobase_2.48.0 GenomicRanges_1.40.0 ## [19] GenomeInfoDb_1.24.2 IRanges_2.22.2 ## [21] S4Vectors_0.26.1 BiocGenerics_0.34.0 ## ## loaded via a namespace (and not attached): ## [1] ProtGenerics_1.20.0 bitops_1.0-6 ## [3] bit64_4.0.5 RColorBrewer_1.1-2 ## [5] progress_1.2.2 httr_1.4.2 ## [7] tools_4.0.2 utf8_1.1.4 ## [9] R6_2.4.1 DBI_1.1.0 ## [11] lazyeval_0.2.2 colorspace_1.4-1 ## [13] tidyselect_1.1.0 prettyunits_1.1.1 ## [15] bit_4.0.4 curl_4.3 ## [17] compiler_4.0.2 cli_2.0.2 ## [19] rtracklayer_1.48.0 bookdown_0.20 ## [21] scales_1.1.1 genefilter_1.70.0 ## [23] askpass_1.1 rappdirs_0.3.1 ## [25] stringr_1.4.0 digest_0.6.25 ## [27] Rsamtools_2.4.0 rmarkdown_2.3 ## [29] XVector_0.28.0 pkgconfig_2.0.3 ## [31] htmltools_0.5.0 fastmap_1.0.1 ## [33] rlang_0.4.7 rstudioapi_0.11 ## [35] RSQLite_2.2.0 shiny_1.5.0 ## [37] generics_0.0.2 BiocParallel_1.22.0 ## [39] RCurl_1.98-1.2 magrittr_1.5 ## [41] GenomeInfoDbData_1.2.3 Matrix_1.2-18 ## [43] Rcpp_1.0.5 munsell_0.5.0 ## [45] fansi_0.4.1 lifecycle_0.2.0 ## [47] stringi_1.4.6 yaml_2.2.1 ## [49] zlibbioc_1.34.0 grid_4.0.2 ## [51] blob_1.2.1 promises_1.1.1 ## [53] crayon_1.3.4 lattice_0.20-41 ## [55] Biostrings_2.56.0 splines_4.0.2 ## [57] annotate_1.66.0 hms_0.5.3 ## [59] locfit_1.5-9.4 knitr_1.29 ## [61] pillar_1.4.6 geneplotter_1.66.0 ## [63] codetools_0.2-16 biomaRt_2.44.1 ## [65] BiocVersion_3.11.1 XML_3.99-0.5 ## [67] glue_1.4.2 evaluate_0.14 ## [69] BiocManager_1.30.10 httpuv_1.5.4 ## [71] vctrs_0.3.4 gtable_0.3.0 ## [73] openssl_1.4.2 purrr_0.3.4 ## [75] assertthat_0.2.1 ggplot2_3.3.2 ## [77] xfun_0.16 mime_0.9 ## [79] xtable_1.8-4 later_1.1.0.1 ## [81] survival_3.2-3 tibble_3.0.3 ## [83] GenomicAlignments_1.24.0 memoise_1.1.0 ## [85] interactiveDisplayBase_1.26.3 ellipsis_0.3.1 "],
["discovering-genomic-coordinates.html", "Chapter 4 Discovering genomic coordinates 4.1 What do we want to do? 4.2 Genomic ranges 4.3 Mapping from identifiers to ranges 4.4 Flexible queries on EnsDb objects 4.5 Saving and session information", " Chapter 4 Discovering genomic coordinates 4.1 What do we want to do? Load the annotation and tidy packages, and our work from the last chapter library(EnsDb.Hsapiens.v75) library(dplyr) toptbl &lt;- readRDS(&quot;toptbl.Rda&quot;) toptbl ## # A tibble: 64,102 x 9 ## Gene SYMBOL ENTREZID baseMean log2FoldChange lfcSE stat pvalue ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ENSG… SPARC… 8404 997. 4.57 0.184 24.9 2.22e-136 ## 2 ENSG… CACNB2 783 495. 3.29 0.133 24.7 7.84e-135 ## 3 ENSG… DUSP1 1843 3409. 2.95 0.121 24.3 3.67e-130 ## 4 ENSG… SAMHD1 25939 12703. 3.77 0.155 24.2 9.58e-130 ## 5 ENSG… MAOA 4128 2342. 3.35 0.142 23.7 1.10e-123 ## 6 ENSG… GPX3 2878 12286. 3.73 0.166 22.5 4.62e-112 ## 7 ENSG… STEAP2 261729 3009. 1.98 0.0900 22.0 5.77e-107 ## 8 ENSG… NEXN 91624 5393. 2.04 0.0942 21.6 1.32e-103 ## 9 ENSG… MT2A 4502 3656. 2.21 0.106 20.9 2.90e- 97 ## 10 ENSG… ADAMT… 9510 30315. 2.35 0.116 20.3 3.26e- 91 ## # … with 64,092 more rows, and 1 more variable: padj &lt;dbl&gt; Can we get information about the genomic coordinates (e.g., chromosome, strand, start and end nucleotides) of each of these genes? 4.2 Genomic ranges _Bioconductor uses the [GenomicRanges][] package to represent genomic coordinates. library(GenomicRanges) GRanges( c(&quot;chr1:1-10&quot;, &quot;chr2:20-30:+&quot;) ) ## GRanges object with 2 ranges and 0 metadata columns: ## seqnames ranges strand ## &lt;Rle&gt; &lt;IRanges&gt; &lt;Rle&gt; ## [1] chr1 1-10 * ## [2] chr2 20-30 + ## ------- ## seqinfo: 2 sequences from an unspecified genome; no seqlengths Genomic ranges consist of seqnames (e.g., chromosome, but could be a contig or other DNA / RNA / amino acid sequence), start and end coordinates, and an optional strand. The coordinates are 1-based, closed intervals. So the first range in the example above starts at the very first nucleotide on chr1, and includes the 10th nucleotide – there are 11 total nucleotides (1, 2, …, 10) in the range in total! This differs from some schemes, notably that used in the UCSC genome browser, where the ranges are 0-based and half-open (the start but not the end nucelotide is included in the range) and the example above would have been written ‘chr1:0-10’. There are a large number of very useful operations that can be performed on GRanges; see the vignettes in the GenomicRanges package, available on the package [landing page][GenomicRanges]. 4.3 Mapping from identifiers to ranges The coordinates of all genes are included in the EnsDb packages. Use the genes() accessor to extract the ranges. genes(EnsDb.Hsapiens.v75) ## GRanges object with 64102 ranges and 6 metadata columns: ## seqnames ranges strand | gene_id ## &lt;Rle&gt; &lt;IRanges&gt; &lt;Rle&gt; | &lt;character&gt; ## ENSG00000223972 1 11869-14412 + | ENSG00000223972 ## ENSG00000227232 1 14363-29806 - | ENSG00000227232 ## ENSG00000243485 1 29554-31109 + | ENSG00000243485 ## ENSG00000237613 1 34554-36081 - | ENSG00000237613 ## ENSG00000268020 1 52473-54936 + | ENSG00000268020 ## ... ... ... ... . ... ## ENSG00000224240 Y 28695572-28695890 + | ENSG00000224240 ## ENSG00000227629 Y 28732789-28737748 - | ENSG00000227629 ## ENSG00000237917 Y 28740998-28780799 - | ENSG00000237917 ## ENSG00000231514 Y 28772667-28773306 - | ENSG00000231514 ## ENSG00000235857 Y 59001391-59001635 + | ENSG00000235857 ## gene_name gene_biotype seq_coord_system symbol ## &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; ## ENSG00000223972 DDX11L1 pseudogene chromosome DDX11L1 ## ENSG00000227232 WASH7P pseudogene chromosome WASH7P ## ENSG00000243485 MIR1302-10 lincRNA chromosome MIR1302-10 ## ENSG00000237613 FAM138A lincRNA chromosome FAM138A ## ENSG00000268020 OR4G4P pseudogene chromosome OR4G4P ## ... ... ... ... ... ## ENSG00000224240 CYCSP49 pseudogene chromosome CYCSP49 ## ENSG00000227629 SLC25A15P1 pseudogene chromosome SLC25A15P1 ## ENSG00000237917 PARP4P1 pseudogene chromosome PARP4P1 ## ENSG00000231514 FAM58CP pseudogene chromosome FAM58CP ## ENSG00000235857 CTBP2P1 pseudogene chromosome CTBP2P1 ## entrezid ## &lt;list&gt; ## ENSG00000223972 100287596,100287102 ## ENSG00000227232 100287171,653635 ## ENSG00000243485 100422919,100422834,100422831,... ## ENSG00000237613 654835,645520,641702 ## ENSG00000268020 NA ## ... ... ## ENSG00000224240 NA ## ENSG00000227629 NA ## ENSG00000237917 NA ## ENSG00000231514 NA ## ENSG00000235857 NA ## ------- ## seqinfo: 273 sequences from GRCh37 genome Note that the GRanges have names corresponding to Ensembl gene identifiers, so the ranges ordered according to our top table are genes(EnsDb.Hsapiens.v75)[toptbl$Gene] ## GRanges object with 64102 ranges and 6 metadata columns: ## seqnames ranges strand | gene_id ## &lt;Rle&gt; &lt;IRanges&gt; &lt;Rle&gt; | &lt;character&gt; ## ENSG00000152583 4 88394487-88452213 - | ENSG00000152583 ## ENSG00000165995 10 18429606-18830798 + | ENSG00000165995 ## ENSG00000120129 5 172195093-172198198 - | ENSG00000120129 ## ENSG00000101347 20 35518632-35580246 - | ENSG00000101347 ## ENSG00000189221 X 43515467-43606068 + | ENSG00000189221 ## ... ... ... ... . ... ## LRG_94 10 72357104-72362531 - | LRG_94 ## LRG_96 15 55495792-55582001 - | LRG_96 ## LRG_97 22 37621310-37640305 - | LRG_97 ## LRG_98 11 36589563-36601312 + | LRG_98 ## LRG_99 11 36613493-36619812 - | LRG_99 ## gene_name gene_biotype seq_coord_system symbol ## &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; ## ENSG00000152583 SPARCL1 protein_coding chromosome SPARCL1 ## ENSG00000165995 CACNB2 protein_coding chromosome CACNB2 ## ENSG00000120129 DUSP1 protein_coding chromosome DUSP1 ## ENSG00000101347 SAMHD1 protein_coding chromosome SAMHD1 ## ENSG00000189221 MAOA protein_coding chromosome MAOA ## ... ... ... ... ... ## LRG_94 LRG_94 LRG_gene chromosome LRG_94 ## LRG_96 LRG_96 LRG_gene chromosome LRG_96 ## LRG_97 LRG_97 LRG_gene chromosome LRG_97 ## LRG_98 LRG_98 LRG_gene chromosome LRG_98 ## LRG_99 LRG_99 LRG_gene chromosome LRG_99 ## entrezid ## &lt;list&gt; ## ENSG00000152583 8404 ## ENSG00000165995 783 ## ENSG00000120129 1843 ## ENSG00000101347 25939 ## ENSG00000189221 4128 ## ... ... ## LRG_94 5551 ## LRG_96 5873 ## LRG_97 5880 ## LRG_98 5896 ## LRG_99 5897 ## ------- ## seqinfo: 273 sequences from GRCh37 genome It is possible to get addition information from the EnsDb, e.g., the coordinates of all exons in a gene. exonsBy(EnsDb.Hsapiens.v75, &quot;gene&quot;)[toptbl$Gene] ## GRangesList object of length 64102: ## $ENSG00000152583 ## GRanges object with 39 ranges and 1 metadata column: ## seqnames ranges strand | exon_id ## &lt;Rle&gt; &lt;IRanges&gt; &lt;Rle&gt; | &lt;character&gt; ## [1] 4 88452130-88452213 - | ENSE00002034086 ## [2] 4 88452130-88452201 - | ENSE00002083738 ## [3] 4 88451697-88451783 - | ENSE00002020252 ## [4] 4 88450197-88450656 - | ENSE00001942085 ## [5] 4 88450197-88450655 - | ENSE00001603831 ## ... ... ... ... . ... ## [35] 4 88401524-88401672 - | ENSE00001175678 ## [36] 4 88400582-88400730 - | ENSE00001175672 ## [37] 4 88394487-88394955 - | ENSE00001914146 ## [38] 4 88394570-88394955 - | ENSE00002056886 ## [39] 4 88394500-88394955 - | ENSE00001135423 ## ------- ## seqinfo: 273 sequences from GRCh37 genome ## ## ... ## &lt;64101 more elements&gt; 4.4 Flexible queries on EnsDb objects The EnsDb objects allow very flexible queries. Suppose we were interested in the top 6 most differentially expressed gene symbols ids &lt;- head(toptbl$SYMBOL) ids ## ENSG00000152583 ENSG00000165995 ENSG00000120129 ENSG00000101347 ENSG00000189221 ## &quot;SPARCL1&quot; &quot;CACNB2&quot; &quot;DUSP1&quot; &quot;SAMHD1&quot; &quot;MAOA&quot; ## ENSG00000211445 ## &quot;GPX3&quot; We can write an expression like genes(EnsDb.Hsapiens.v75, filter = ~ genename %in% ids) ## GRanges object with 6 ranges and 6 metadata columns: ## seqnames ranges strand | gene_id ## &lt;Rle&gt; &lt;IRanges&gt; &lt;Rle&gt; | &lt;character&gt; ## ENSG00000165995 10 18429606-18830798 + | ENSG00000165995 ## ENSG00000101347 20 35518632-35580246 - | ENSG00000101347 ## ENSG00000152583 4 88394487-88452213 - | ENSG00000152583 ## ENSG00000211445 5 150400124-150408554 + | ENSG00000211445 ## ENSG00000120129 5 172195093-172198198 - | ENSG00000120129 ## ENSG00000189221 X 43515467-43606068 + | ENSG00000189221 ## gene_name gene_biotype seq_coord_system symbol ## &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; ## ENSG00000165995 CACNB2 protein_coding chromosome CACNB2 ## ENSG00000101347 SAMHD1 protein_coding chromosome SAMHD1 ## ENSG00000152583 SPARCL1 protein_coding chromosome SPARCL1 ## ENSG00000211445 GPX3 protein_coding chromosome GPX3 ## ENSG00000120129 DUSP1 protein_coding chromosome DUSP1 ## ENSG00000189221 MAOA protein_coding chromosome MAOA ## entrezid ## &lt;list&gt; ## ENSG00000165995 783 ## ENSG00000101347 25939 ## ENSG00000152583 8404 ## ENSG00000211445 2878 ## ENSG00000120129 1843 ## ENSG00000189221 4128 ## ------- ## seqinfo: 5 sequences from GRCh37 genome to select just the genomic ranges of interest, and genes(EnsDb.Hsapiens.v75, filter = ~ genename %in% ids)[names(ids)] ## GRanges object with 6 ranges and 6 metadata columns: ## seqnames ranges strand | gene_id ## &lt;Rle&gt; &lt;IRanges&gt; &lt;Rle&gt; | &lt;character&gt; ## ENSG00000152583 4 88394487-88452213 - | ENSG00000152583 ## ENSG00000165995 10 18429606-18830798 + | ENSG00000165995 ## ENSG00000120129 5 172195093-172198198 - | ENSG00000120129 ## ENSG00000101347 20 35518632-35580246 - | ENSG00000101347 ## ENSG00000189221 X 43515467-43606068 + | ENSG00000189221 ## ENSG00000211445 5 150400124-150408554 + | ENSG00000211445 ## gene_name gene_biotype seq_coord_system symbol ## &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; ## ENSG00000152583 SPARCL1 protein_coding chromosome SPARCL1 ## ENSG00000165995 CACNB2 protein_coding chromosome CACNB2 ## ENSG00000120129 DUSP1 protein_coding chromosome DUSP1 ## ENSG00000101347 SAMHD1 protein_coding chromosome SAMHD1 ## ENSG00000189221 MAOA protein_coding chromosome MAOA ## ENSG00000211445 GPX3 protein_coding chromosome GPX3 ## entrezid ## &lt;list&gt; ## ENSG00000152583 8404 ## ENSG00000165995 783 ## ENSG00000120129 1843 ## ENSG00000101347 25939 ## ENSG00000189221 4128 ## ENSG00000211445 2878 ## ------- ## seqinfo: 5 sequences from GRCh37 genome to place these ranges in ‘top table’ order. You’ll have an opportunity to explore more about genomic ranges when Dr. Stephanie Hicks talks on Tuesday, October 6. 4.5 Saving and session information sessionInfo() ## R version 4.0.2 Patched (2020-09-15 r79213) ## Platform: x86_64-apple-darwin17.7.0 (64-bit) ## Running under: macOS High Sierra 10.13.6 ## ## Matrix products: default ## BLAS: /Users/ma38727/bin/R-4-0-branch/lib/libRblas.dylib ## LAPACK: /Users/ma38727/bin/R-4-0-branch/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats4 parallel stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] AnnotationHub_2.20.2 BiocFileCache_1.12.1 ## [3] dbplyr_1.4.4 DESeq2_1.28.1 ## [5] airway_1.8.0 SummarizedExperiment_1.18.2 ## [7] DelayedArray_0.14.1 matrixStats_0.56.0 ## [9] org.Hs.eg.db_3.11.4 GO.db_3.11.4 ## [11] dplyr_1.0.2 EnsDb.Hsapiens.v75_2.99.0 ## [13] ensembldb_2.12.1 AnnotationFilter_1.12.0 ## [15] GenomicFeatures_1.40.1 AnnotationDbi_1.50.3 ## [17] Biobase_2.48.0 GenomicRanges_1.40.0 ## [19] GenomeInfoDb_1.24.2 IRanges_2.22.2 ## [21] S4Vectors_0.26.1 BiocGenerics_0.34.0 ## ## loaded via a namespace (and not attached): ## [1] ProtGenerics_1.20.0 bitops_1.0-6 ## [3] bit64_4.0.5 RColorBrewer_1.1-2 ## [5] progress_1.2.2 httr_1.4.2 ## [7] tools_4.0.2 utf8_1.1.4 ## [9] R6_2.4.1 DBI_1.1.0 ## [11] lazyeval_0.2.2 colorspace_1.4-1 ## [13] tidyselect_1.1.0 prettyunits_1.1.1 ## [15] bit_4.0.4 curl_4.3 ## [17] compiler_4.0.2 cli_2.0.2 ## [19] rtracklayer_1.48.0 bookdown_0.20 ## [21] scales_1.1.1 genefilter_1.70.0 ## [23] askpass_1.1 rappdirs_0.3.1 ## [25] stringr_1.4.0 digest_0.6.25 ## [27] Rsamtools_2.4.0 rmarkdown_2.3 ## [29] XVector_0.28.0 pkgconfig_2.0.3 ## [31] htmltools_0.5.0 fastmap_1.0.1 ## [33] rlang_0.4.7 rstudioapi_0.11 ## [35] RSQLite_2.2.0 shiny_1.5.0 ## [37] generics_0.0.2 BiocParallel_1.22.0 ## [39] RCurl_1.98-1.2 magrittr_1.5 ## [41] GenomeInfoDbData_1.2.3 Matrix_1.2-18 ## [43] Rcpp_1.0.5 munsell_0.5.0 ## [45] fansi_0.4.1 lifecycle_0.2.0 ## [47] stringi_1.4.6 yaml_2.2.1 ## [49] zlibbioc_1.34.0 grid_4.0.2 ## [51] blob_1.2.1 promises_1.1.1 ## [53] crayon_1.3.4 lattice_0.20-41 ## [55] Biostrings_2.56.0 splines_4.0.2 ## [57] annotate_1.66.0 hms_0.5.3 ## [59] locfit_1.5-9.4 knitr_1.29 ## [61] pillar_1.4.6 geneplotter_1.66.0 ## [63] codetools_0.2-16 biomaRt_2.44.1 ## [65] BiocVersion_3.11.1 XML_3.99-0.5 ## [67] glue_1.4.2 evaluate_0.14 ## [69] BiocManager_1.30.10 httpuv_1.5.4 ## [71] vctrs_0.3.4 gtable_0.3.0 ## [73] openssl_1.4.2 purrr_0.3.4 ## [75] assertthat_0.2.1 ggplot2_3.3.2 ## [77] xfun_0.16 mime_0.9 ## [79] xtable_1.8-4 later_1.1.0.1 ## [81] survival_3.2-3 tibble_3.0.3 ## [83] GenomicAlignments_1.24.0 memoise_1.1.0 ## [85] interactiveDisplayBase_1.26.3 ellipsis_0.3.1 "],
["gene-sets.html", "Chapter 5 Gene sets 5.1 What do we want to do? 5.2 Mapping from (entrez) gene identiifiers to GO identifiers 5.3 Using GO (gene ontology) annotations to group genes by biological process 5.4 More flexible gene set annotation using BiocSet 5.5 Saving and session information", " Chapter 5 Gene sets 5.1 What do we want to do? Return to our top table toptbl &lt;- readRDS(&quot;toptbl.Rda&quot;) toptbl ## # A tibble: 64,102 x 9 ## Gene SYMBOL ENTREZID baseMean log2FoldChange lfcSE stat pvalue ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ENSG… SPARC… 8404 997. 4.57 0.184 24.9 2.22e-136 ## 2 ENSG… CACNB2 783 495. 3.29 0.133 24.7 7.84e-135 ## 3 ENSG… DUSP1 1843 3409. 2.95 0.121 24.3 3.67e-130 ## 4 ENSG… SAMHD1 25939 12703. 3.77 0.155 24.2 9.58e-130 ## 5 ENSG… MAOA 4128 2342. 3.35 0.142 23.7 1.10e-123 ## 6 ENSG… GPX3 2878 12286. 3.73 0.166 22.5 4.62e-112 ## 7 ENSG… STEAP2 261729 3009. 1.98 0.0900 22.0 5.77e-107 ## 8 ENSG… NEXN 91624 5393. 2.04 0.0942 21.6 1.32e-103 ## 9 ENSG… MT2A 4502 3656. 2.21 0.106 20.9 2.90e- 97 ## 10 ENSG… ADAMT… 9510 30315. 2.35 0.116 20.3 3.26e- 91 ## # … with 64,092 more rows, and 1 more variable: padj &lt;dbl&gt; One small correction to the top table is that the ENTREZID should be a character() vector toptbl &lt;- toptbl %&gt;% mutate(ENTREZID = as.character(ENTREZID)) Biologically, genes always function in some kind of relation with other genes and the biology of organsims. For instance, genes are expressed in particularly cellular compartments, or participate in particular biological processes. We would like to use established ontologies that describe these relationships. 5.2 Mapping from (entrez) gene identiifiers to GO identifiers The org.Hs.eg.db packages provides a way to map from (Entrez) gene identifiers to GO terms. library(org.Hs.eg.db) Note that the keytypes of org.Hs.eg.db contain (Entrez) gene IDs, and the columns contain GO ids keytypes(org.Hs.eg.db) ## [1] &quot;ACCNUM&quot; &quot;ALIAS&quot; &quot;ENSEMBL&quot; &quot;ENSEMBLPROT&quot; &quot;ENSEMBLTRANS&quot; ## [6] &quot;ENTREZID&quot; &quot;ENZYME&quot; &quot;EVIDENCE&quot; &quot;EVIDENCEALL&quot; &quot;GENENAME&quot; ## [11] &quot;GO&quot; &quot;GOALL&quot; &quot;IPI&quot; &quot;MAP&quot; &quot;OMIM&quot; ## [16] &quot;ONTOLOGY&quot; &quot;ONTOLOGYALL&quot; &quot;PATH&quot; &quot;PFAM&quot; &quot;PMID&quot; ## [21] &quot;PROSITE&quot; &quot;REFSEQ&quot; &quot;SYMBOL&quot; &quot;UCSCKG&quot; &quot;UNIGENE&quot; ## [26] &quot;UNIPROT&quot; columns(org.Hs.eg.db) ## [1] &quot;ACCNUM&quot; &quot;ALIAS&quot; &quot;ENSEMBL&quot; &quot;ENSEMBLPROT&quot; &quot;ENSEMBLTRANS&quot; ## [6] &quot;ENTREZID&quot; &quot;ENZYME&quot; &quot;EVIDENCE&quot; &quot;EVIDENCEALL&quot; &quot;GENENAME&quot; ## [11] &quot;GO&quot; &quot;GOALL&quot; &quot;IPI&quot; &quot;MAP&quot; &quot;OMIM&quot; ## [16] &quot;ONTOLOGY&quot; &quot;ONTOLOGYALL&quot; &quot;PATH&quot; &quot;PFAM&quot; &quot;PMID&quot; ## [21] &quot;PROSITE&quot; &quot;REFSEQ&quot; &quot;SYMBOL&quot; &quot;UCSCKG&quot; &quot;UNIGENE&quot; ## [26] &quot;UNIPROT&quot; Genes can belong to more than on GO category (e.g., participate in more than one biological pathway). Use AnnotationDbi::select() to map between ENTREZID and GO id; we’ll represent the result as a tibble for convenience eggo &lt;- AnnotationDbi::select(org.Hs.eg.db, toptbl$ENTREZID, &quot;GO&quot;) %&gt;% as_tibble() ## &#39;select()&#39; returned many:many mapping between keys and columns eggo ## # A tibble: 364,454 x 4 ## ENTREZID GO EVIDENCE ONTOLOGY ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 8404 GO:0005509 IBA MF ## 2 8404 GO:0005515 IPI MF ## 3 8404 GO:0005518 IBA MF ## 4 8404 GO:0005576 HDA CC ## 5 8404 GO:0005615 HDA CC ## 6 8404 GO:0005615 IBA CC ## 7 8404 GO:0005788 TAS CC ## 8 8404 GO:0007165 IEA BP ## 9 8404 GO:0043687 TAS BP ## 10 8404 GO:0044267 TAS BP ## # … with 364,444 more rows Let’s focus on the ‘biological process’ (BP) ontology, and not worry about ‘EVIDENCE’ (the type of evidence, e.g., experimental verification, computational inference, …) that supports the classification of a particular ENTREZ identifier to a particular GO identifier. eggo &lt;- eggo %&gt;% dplyr::rename(GOID = &quot;GO&quot;) %&gt;% dplyr::select(-EVIDENCE) %&gt;% dplyr::filter(ONTOLOGY %in% &quot;BP&quot;) %&gt;% dplyr::distinct() eggo ## # A tibble: 132,810 x 3 ## ENTREZID GOID ONTOLOGY ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 8404 GO:0007165 BP ## 2 8404 GO:0043687 BP ## 3 8404 GO:0044267 BP ## 4 8404 GO:0099560 BP ## 5 783 GO:0007268 BP ## 6 783 GO:0007528 BP ## 7 783 GO:0007601 BP ## 8 783 GO:0051928 BP ## 9 783 GO:0061337 BP ## 10 783 GO:0070509 BP ## # … with 132,800 more rows 5.3 Using GO (gene ontology) annotations to group genes by biological process The GO.db package provides information on GO identifiers. library(GO.db) columns(GO.db) ## [1] &quot;DEFINITION&quot; &quot;GOID&quot; &quot;ONTOLOGY&quot; &quot;TERM&quot; Use AnnotationDbi::select() to explore information about a particular GO id goid &lt;- &quot;GO:0007165&quot; AnnotationDbi::select(GO.db, goid, &quot;TERM&quot;, &quot;GOID&quot;) ## GOID TERM ## 1 GO:0007165 signal transduction def = AnnotationDbi::select(GO.db, goid, &quot;DEFINITION&quot;, &quot;GOID&quot;) cat(strwrap(def$DEFINITION), sep=&quot;\\n&quot;) ## The cellular process in which a signal is conveyed to trigger a change ## in the activity or state of a cell. Signal transduction begins with ## reception of a signal (e.g. a ligand binding to a receptor or receptor ## activation by a stimulus such as light), or for signal transduction in ## the absence of ligand, signal-withdrawal or the activity of a ## constitutively active receptor. Signal transduction ends with ## regulation of a downstream cellular process, e.g. regulation of ## transcription or regulation of a metabolic process. Signal transduction ## covers signaling from receptors located on the surface of the cell and ## signaling via molecules located within the cell. For signaling between ## cells, signal transduction is restricted to events at and within the ## receiving cell. Add terms and definitions to all rows of eggo goinfo &lt;- AnnotationDbi::select( GO.db, eggo$GOID, c(&quot;TERM&quot;, &quot;DEFINITION&quot;), &quot;GOID&quot; ) %&gt;% as_tibble() %&gt;% distinct() ## &#39;select()&#39; returned many:1 mapping between keys and columns goinfo ## # A tibble: 12,130 x 3 ## GOID TERM DEFINITION ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 GO:0007… signal transduction The cellular process in which a signal is … ## 2 GO:0043… post-translational prot… The process of covalently altering one or … ## 3 GO:0044… cellular protein metabo… The chemical reactions and pathways involv… ## 4 GO:0099… synaptic membrane adhes… The attachment of presynaptic membrane to … ## 5 GO:0007… chemical synaptic trans… The vesicular release of classical neurotr… ## 6 GO:0007… neuromuscular junction … A process that is carried out at the cellu… ## 7 GO:0007… visual perception The series of events required for an organ… ## 8 GO:0051… positive regulation of … Any process that activates or increases th… ## 9 GO:0061… cardiac conduction Transfer of an organized electrical impuls… ## 10 GO:0070… calcium ion import The directed movement of calcium ions into… ## # … with 12,120 more rows Use dplyr::left_join() to join all rows of eggo to their corresponding term and definition… eggoinfo &lt;- left_join(eggo, goinfo, by = &quot;GOID&quot;) eggoinfo ## # A tibble: 132,810 x 5 ## ENTREZID GOID ONTOLOGY TERM DEFINITION ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 8404 GO:000… BP signal transducti… The cellular process in which a… ## 2 8404 GO:004… BP post-translationa… The process of covalently alter… ## 3 8404 GO:004… BP cellular protein … The chemical reactions and path… ## 4 8404 GO:009… BP synaptic membrane… The attachment of presynaptic m… ## 5 783 GO:000… BP chemical synaptic… The vesicular release of classi… ## 6 783 GO:000… BP neuromuscular jun… A process that is carried out a… ## 7 783 GO:000… BP visual perception The series of events required f… ## 8 783 GO:005… BP positive regulati… Any process that activates or i… ## 9 783 GO:006… BP cardiac conduction Transfer of an organized electr… ## 10 783 GO:007… BP calcium ion import The directed movement of calciu… ## # … with 132,800 more rows …and even add the top table gene expression information left_join(eggoinfo, toptbl, by = &quot;ENTREZID&quot;) ## # A tibble: 155,800 x 13 ## ENTREZID GOID ONTOLOGY TERM DEFINITION Gene SYMBOL baseMean log2FoldChange ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 8404 GO:0… BP sign… The cellu… ENSG… SPARC… 997. 4.57 ## 2 8404 GO:0… BP post… The proce… ENSG… SPARC… 997. 4.57 ## 3 8404 GO:0… BP cell… The chemi… ENSG… SPARC… 997. 4.57 ## 4 8404 GO:0… BP syna… The attac… ENSG… SPARC… 997. 4.57 ## 5 783 GO:0… BP chem… The vesic… ENSG… CACNB2 495. 3.29 ## 6 783 GO:0… BP neur… A process… ENSG… CACNB2 495. 3.29 ## 7 783 GO:0… BP visu… The serie… ENSG… CACNB2 495. 3.29 ## 8 783 GO:0… BP posi… Any proce… ENSG… CACNB2 495. 3.29 ## 9 783 GO:0… BP card… Transfer … ENSG… CACNB2 495. 3.29 ## 10 783 GO:0… BP calc… The direc… ENSG… CACNB2 495. 3.29 ## # … with 155,790 more rows, and 4 more variables: lfcSE &lt;dbl&gt;, stat &lt;dbl&gt;, ## # pvalue &lt;dbl&gt;, padj &lt;dbl&gt; 5.4 More flexible gene set annotation using BiocSet 5.5 Saving and session information sessionInfo() ## R version 4.0.2 Patched (2020-09-15 r79213) ## Platform: x86_64-apple-darwin17.7.0 (64-bit) ## Running under: macOS High Sierra 10.13.6 ## ## Matrix products: default ## BLAS: /Users/ma38727/bin/R-4-0-branch/lib/libRblas.dylib ## LAPACK: /Users/ma38727/bin/R-4-0-branch/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats4 parallel stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] AnnotationHub_2.20.2 BiocFileCache_1.12.1 ## [3] dbplyr_1.4.4 DESeq2_1.28.1 ## [5] airway_1.8.0 SummarizedExperiment_1.18.2 ## [7] DelayedArray_0.14.1 matrixStats_0.56.0 ## [9] org.Hs.eg.db_3.11.4 GO.db_3.11.4 ## [11] dplyr_1.0.2 EnsDb.Hsapiens.v75_2.99.0 ## [13] ensembldb_2.12.1 AnnotationFilter_1.12.0 ## [15] GenomicFeatures_1.40.1 AnnotationDbi_1.50.3 ## [17] Biobase_2.48.0 GenomicRanges_1.40.0 ## [19] GenomeInfoDb_1.24.2 IRanges_2.22.2 ## [21] S4Vectors_0.26.1 BiocGenerics_0.34.0 ## ## loaded via a namespace (and not attached): ## [1] ProtGenerics_1.20.0 bitops_1.0-6 ## [3] bit64_4.0.5 RColorBrewer_1.1-2 ## [5] progress_1.2.2 httr_1.4.2 ## [7] tools_4.0.2 utf8_1.1.4 ## [9] R6_2.4.1 DBI_1.1.0 ## [11] lazyeval_0.2.2 colorspace_1.4-1 ## [13] tidyselect_1.1.0 prettyunits_1.1.1 ## [15] bit_4.0.4 curl_4.3 ## [17] compiler_4.0.2 cli_2.0.2 ## [19] rtracklayer_1.48.0 bookdown_0.20 ## [21] scales_1.1.1 genefilter_1.70.0 ## [23] askpass_1.1 rappdirs_0.3.1 ## [25] stringr_1.4.0 digest_0.6.25 ## [27] Rsamtools_2.4.0 rmarkdown_2.3 ## [29] XVector_0.28.0 pkgconfig_2.0.3 ## [31] htmltools_0.5.0 fastmap_1.0.1 ## [33] rlang_0.4.7 rstudioapi_0.11 ## [35] RSQLite_2.2.0 shiny_1.5.0 ## [37] generics_0.0.2 BiocParallel_1.22.0 ## [39] RCurl_1.98-1.2 magrittr_1.5 ## [41] GenomeInfoDbData_1.2.3 Matrix_1.2-18 ## [43] Rcpp_1.0.5 munsell_0.5.0 ## [45] fansi_0.4.1 lifecycle_0.2.0 ## [47] stringi_1.4.6 yaml_2.2.1 ## [49] zlibbioc_1.34.0 grid_4.0.2 ## [51] blob_1.2.1 promises_1.1.1 ## [53] crayon_1.3.4 lattice_0.20-41 ## [55] Biostrings_2.56.0 splines_4.0.2 ## [57] annotate_1.66.0 hms_0.5.3 ## [59] locfit_1.5-9.4 knitr_1.29 ## [61] pillar_1.4.6 geneplotter_1.66.0 ## [63] codetools_0.2-16 biomaRt_2.44.1 ## [65] BiocVersion_3.11.1 XML_3.99-0.5 ## [67] glue_1.4.2 evaluate_0.14 ## [69] BiocManager_1.30.10 httpuv_1.5.4 ## [71] vctrs_0.3.4 gtable_0.3.0 ## [73] openssl_1.4.2 purrr_0.3.4 ## [75] assertthat_0.2.1 ggplot2_3.3.2 ## [77] xfun_0.16 mime_0.9 ## [79] xtable_1.8-4 later_1.1.0.1 ## [81] survival_3.2-3 tibble_3.0.3 ## [83] GenomicAlignments_1.24.0 memoise_1.1.0 ## [85] interactiveDisplayBase_1.26.3 ellipsis_0.3.1 "],
["references.html", "References", " References "]
]
